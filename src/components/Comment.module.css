.comment {
  margin-top: 1.5rem;
  display: flex;
  gap: 1rem;
}

.comment > img {
  width: 3rem;
  height: 3rem;
  border-radius: 8px;
}

.commentBox {
  /* faz com que a div ocupe o máximo de espaço possível */
  flex: 1;
}

.commentContent {
  background: var(--gray-700);
  border-radius: 8px;
  padding: 1rem;
}

.commentContent header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}

.authorAndTime strong {
  display: block;
  font-size: 0.875rem;
  line-height: 1.6;
}

.authorAndTime time {
  display: block;
  font-size: 0.75rem;
  line-height: 1.6;
  color: var(--gray-400);
}

.commentContent header button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;

  /* 
    o botão SEMPRE segue a sua altura pela propriedade line-height, sendo assim para garantir que a altura está do mesmo tamanho definido no ícone é importante fazer essa declaração. para provar o que está descrito aqui, basta remover essa linha abaixo e colocar em foco o botão (apertando tab), dará para ver que a borda do foco estará um pouco maior do que o ícone do botão em si (e, portanto, do tamanho que realmente ele tem que ter)
    
    observação: font-size: 0 também resolve essa questão
    */
  line-height: 0;
  border-radius: 2px;
}

.commentContent header button:hover {
  color: var(--red-500);
}

.commentContent p {
  margin-top: 1rem;
  color: var(--gray-300);
}

.commentBox footer {
  margin-top: 1rem;
}

.commentBox footer button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;
  display: flex;
  align-items: center;
  border-radius: 2px;
}

.commentBox footer button:hover {
  color: var(--gray-300);
}

.commentBox footer button svg {
  margin-right: 0.5rem;
}

.commentBox footer button span::before {
  content: "\2022";
  padding: 0 0.25rem;
}
